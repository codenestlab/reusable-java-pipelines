on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build com Maven
        run: mvn clean package

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest .

      - name: Login no GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest



# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Cache Docker layers
#         uses: actions/cache@v3
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Build Docker image
#         run: |
#           docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest .

#       - name: Login no GitHub Container Registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

#       - name: Push Docker image
#         run: |
#           docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
